// source: sns_swap.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.ic_sns_swap.pb.v1.BuyerState', null, global);
goog.exportSymbol('proto.ic_sns_swap.pb.v1.CanisterCallError', null, global);
goog.exportSymbol('proto.ic_sns_swap.pb.v1.DerivedState', null, global);
goog.exportSymbol('proto.ic_sns_swap.pb.v1.ErrorRefundIcpRequest', null, global);
goog.exportSymbol('proto.ic_sns_swap.pb.v1.ErrorRefundIcpResponse', null, global);
goog.exportSymbol('proto.ic_sns_swap.pb.v1.FinalizeSwapRequest', null, global);
goog.exportSymbol('proto.ic_sns_swap.pb.v1.FinalizeSwapResponse', null, global);
goog.exportSymbol('proto.ic_sns_swap.pb.v1.GetCanisterStatusRequest', null, global);
goog.exportSymbol('proto.ic_sns_swap.pb.v1.GetStateRequest', null, global);
goog.exportSymbol('proto.ic_sns_swap.pb.v1.GetStateResponse', null, global);
goog.exportSymbol('proto.ic_sns_swap.pb.v1.Init', null, global);
goog.exportSymbol('proto.ic_sns_swap.pb.v1.Lifecycle', null, global);
goog.exportSymbol('proto.ic_sns_swap.pb.v1.RefreshBuyerTokensRequest', null, global);
goog.exportSymbol('proto.ic_sns_swap.pb.v1.RefreshBuyerTokensResponse', null, global);
goog.exportSymbol('proto.ic_sns_swap.pb.v1.RefreshSnsTokensRequest', null, global);
goog.exportSymbol('proto.ic_sns_swap.pb.v1.RefreshSnsTokensResponse', null, global);
goog.exportSymbol('proto.ic_sns_swap.pb.v1.SetModeCallResult', null, global);
goog.exportSymbol('proto.ic_sns_swap.pb.v1.SetModeCallResult.PossibilityCase', null, global);
goog.exportSymbol('proto.ic_sns_swap.pb.v1.SetOpenTimeWindowRequest', null, global);
goog.exportSymbol('proto.ic_sns_swap.pb.v1.SetOpenTimeWindowResponse', null, global);
goog.exportSymbol('proto.ic_sns_swap.pb.v1.State', null, global);
goog.exportSymbol('proto.ic_sns_swap.pb.v1.Swap', null, global);
goog.exportSymbol('proto.ic_sns_swap.pb.v1.SweepResult', null, global);
goog.exportSymbol('proto.ic_sns_swap.pb.v1.TimeWindow', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ic_sns_swap.pb.v1.Init = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ic_sns_swap.pb.v1.Init.repeatedFields_, null);
};
goog.inherits(proto.ic_sns_swap.pb.v1.Init, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ic_sns_swap.pb.v1.Init.displayName = 'proto.ic_sns_swap.pb.v1.Init';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ic_sns_swap.pb.v1.BuyerState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ic_sns_swap.pb.v1.BuyerState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ic_sns_swap.pb.v1.BuyerState.displayName = 'proto.ic_sns_swap.pb.v1.BuyerState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ic_sns_swap.pb.v1.State = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ic_sns_swap.pb.v1.State, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ic_sns_swap.pb.v1.State.displayName = 'proto.ic_sns_swap.pb.v1.State';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ic_sns_swap.pb.v1.TimeWindow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ic_sns_swap.pb.v1.TimeWindow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ic_sns_swap.pb.v1.TimeWindow.displayName = 'proto.ic_sns_swap.pb.v1.TimeWindow';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ic_sns_swap.pb.v1.Swap = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ic_sns_swap.pb.v1.Swap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ic_sns_swap.pb.v1.Swap.displayName = 'proto.ic_sns_swap.pb.v1.Swap';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ic_sns_swap.pb.v1.GetCanisterStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ic_sns_swap.pb.v1.GetCanisterStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ic_sns_swap.pb.v1.GetCanisterStatusRequest.displayName = 'proto.ic_sns_swap.pb.v1.GetCanisterStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ic_sns_swap.pb.v1.GetStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ic_sns_swap.pb.v1.GetStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ic_sns_swap.pb.v1.GetStateRequest.displayName = 'proto.ic_sns_swap.pb.v1.GetStateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ic_sns_swap.pb.v1.GetStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ic_sns_swap.pb.v1.GetStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ic_sns_swap.pb.v1.GetStateResponse.displayName = 'proto.ic_sns_swap.pb.v1.GetStateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ic_sns_swap.pb.v1.DerivedState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ic_sns_swap.pb.v1.DerivedState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ic_sns_swap.pb.v1.DerivedState.displayName = 'proto.ic_sns_swap.pb.v1.DerivedState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ic_sns_swap.pb.v1.SetOpenTimeWindowRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ic_sns_swap.pb.v1.SetOpenTimeWindowRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ic_sns_swap.pb.v1.SetOpenTimeWindowRequest.displayName = 'proto.ic_sns_swap.pb.v1.SetOpenTimeWindowRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ic_sns_swap.pb.v1.SetOpenTimeWindowResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ic_sns_swap.pb.v1.SetOpenTimeWindowResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ic_sns_swap.pb.v1.SetOpenTimeWindowResponse.displayName = 'proto.ic_sns_swap.pb.v1.SetOpenTimeWindowResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ic_sns_swap.pb.v1.RefreshSnsTokensRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ic_sns_swap.pb.v1.RefreshSnsTokensRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ic_sns_swap.pb.v1.RefreshSnsTokensRequest.displayName = 'proto.ic_sns_swap.pb.v1.RefreshSnsTokensRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ic_sns_swap.pb.v1.RefreshSnsTokensResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ic_sns_swap.pb.v1.RefreshSnsTokensResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ic_sns_swap.pb.v1.RefreshSnsTokensResponse.displayName = 'proto.ic_sns_swap.pb.v1.RefreshSnsTokensResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ic_sns_swap.pb.v1.RefreshBuyerTokensRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ic_sns_swap.pb.v1.RefreshBuyerTokensRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ic_sns_swap.pb.v1.RefreshBuyerTokensRequest.displayName = 'proto.ic_sns_swap.pb.v1.RefreshBuyerTokensRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ic_sns_swap.pb.v1.RefreshBuyerTokensResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ic_sns_swap.pb.v1.RefreshBuyerTokensResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ic_sns_swap.pb.v1.RefreshBuyerTokensResponse.displayName = 'proto.ic_sns_swap.pb.v1.RefreshBuyerTokensResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ic_sns_swap.pb.v1.FinalizeSwapRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ic_sns_swap.pb.v1.FinalizeSwapRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ic_sns_swap.pb.v1.FinalizeSwapRequest.displayName = 'proto.ic_sns_swap.pb.v1.FinalizeSwapRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ic_sns_swap.pb.v1.FinalizeSwapResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ic_sns_swap.pb.v1.FinalizeSwapResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ic_sns_swap.pb.v1.FinalizeSwapResponse.displayName = 'proto.ic_sns_swap.pb.v1.FinalizeSwapResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ic_sns_swap.pb.v1.SweepResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ic_sns_swap.pb.v1.SweepResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ic_sns_swap.pb.v1.SweepResult.displayName = 'proto.ic_sns_swap.pb.v1.SweepResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ic_sns_swap.pb.v1.SetModeCallResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ic_sns_swap.pb.v1.SetModeCallResult.oneofGroups_);
};
goog.inherits(proto.ic_sns_swap.pb.v1.SetModeCallResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ic_sns_swap.pb.v1.SetModeCallResult.displayName = 'proto.ic_sns_swap.pb.v1.SetModeCallResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ic_sns_swap.pb.v1.CanisterCallError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ic_sns_swap.pb.v1.CanisterCallError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ic_sns_swap.pb.v1.CanisterCallError.displayName = 'proto.ic_sns_swap.pb.v1.CanisterCallError';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ic_sns_swap.pb.v1.ErrorRefundIcpRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ic_sns_swap.pb.v1.ErrorRefundIcpRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ic_sns_swap.pb.v1.ErrorRefundIcpRequest.displayName = 'proto.ic_sns_swap.pb.v1.ErrorRefundIcpRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ic_sns_swap.pb.v1.ErrorRefundIcpResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ic_sns_swap.pb.v1.ErrorRefundIcpResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ic_sns_swap.pb.v1.ErrorRefundIcpResponse.displayName = 'proto.ic_sns_swap.pb.v1.ErrorRefundIcpResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ic_sns_swap.pb.v1.Init.repeatedFields_ = [11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ic_sns_swap.pb.v1.Init.prototype.toObject = function(opt_includeInstance) {
  return proto.ic_sns_swap.pb.v1.Init.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ic_sns_swap.pb.v1.Init} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.Init.toObject = function(includeInstance, msg) {
  var f, obj = {
    nnsGovernanceCanisterId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    snsGovernanceCanisterId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    snsLedgerCanisterId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    icpLedgerCanisterId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    maxIcpE8s: jspb.Message.getFieldWithDefault(msg, 5, 0),
    minParticipants: jspb.Message.getFieldWithDefault(msg, 7, 0),
    minParticipantIcpE8s: jspb.Message.getFieldWithDefault(msg, 8, 0),
    maxParticipantIcpE8s: jspb.Message.getFieldWithDefault(msg, 9, 0),
    minIcpE8s: jspb.Message.getFieldWithDefault(msg, 10, 0),
    fallbackControllerPrincipalIdsList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ic_sns_swap.pb.v1.Init}
 */
proto.ic_sns_swap.pb.v1.Init.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ic_sns_swap.pb.v1.Init;
  return proto.ic_sns_swap.pb.v1.Init.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ic_sns_swap.pb.v1.Init} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ic_sns_swap.pb.v1.Init}
 */
proto.ic_sns_swap.pb.v1.Init.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNnsGovernanceCanisterId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSnsGovernanceCanisterId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSnsLedgerCanisterId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcpLedgerCanisterId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMaxIcpE8s(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinParticipants(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMinParticipantIcpE8s(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMaxParticipantIcpE8s(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMinIcpE8s(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addFallbackControllerPrincipalIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ic_sns_swap.pb.v1.Init.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ic_sns_swap.pb.v1.Init.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ic_sns_swap.pb.v1.Init} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.Init.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNnsGovernanceCanisterId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSnsGovernanceCanisterId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSnsLedgerCanisterId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIcpLedgerCanisterId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMaxIcpE8s();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getMinParticipants();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getMinParticipantIcpE8s();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = message.getMaxParticipantIcpE8s();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getMinIcpE8s();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getFallbackControllerPrincipalIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
};


/**
 * optional string nns_governance_canister_id = 1;
 * @return {string}
 */
proto.ic_sns_swap.pb.v1.Init.prototype.getNnsGovernanceCanisterId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ic_sns_swap.pb.v1.Init} returns this
 */
proto.ic_sns_swap.pb.v1.Init.prototype.setNnsGovernanceCanisterId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sns_governance_canister_id = 2;
 * @return {string}
 */
proto.ic_sns_swap.pb.v1.Init.prototype.getSnsGovernanceCanisterId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ic_sns_swap.pb.v1.Init} returns this
 */
proto.ic_sns_swap.pb.v1.Init.prototype.setSnsGovernanceCanisterId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string sns_ledger_canister_id = 3;
 * @return {string}
 */
proto.ic_sns_swap.pb.v1.Init.prototype.getSnsLedgerCanisterId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ic_sns_swap.pb.v1.Init} returns this
 */
proto.ic_sns_swap.pb.v1.Init.prototype.setSnsLedgerCanisterId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string icp_ledger_canister_id = 4;
 * @return {string}
 */
proto.ic_sns_swap.pb.v1.Init.prototype.getIcpLedgerCanisterId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ic_sns_swap.pb.v1.Init} returns this
 */
proto.ic_sns_swap.pb.v1.Init.prototype.setIcpLedgerCanisterId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint64 max_icp_e8s = 5;
 * @return {number}
 */
proto.ic_sns_swap.pb.v1.Init.prototype.getMaxIcpE8s = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ic_sns_swap.pb.v1.Init} returns this
 */
proto.ic_sns_swap.pb.v1.Init.prototype.setMaxIcpE8s = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 min_participants = 7;
 * @return {number}
 */
proto.ic_sns_swap.pb.v1.Init.prototype.getMinParticipants = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ic_sns_swap.pb.v1.Init} returns this
 */
proto.ic_sns_swap.pb.v1.Init.prototype.setMinParticipants = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint64 min_participant_icp_e8s = 8;
 * @return {number}
 */
proto.ic_sns_swap.pb.v1.Init.prototype.getMinParticipantIcpE8s = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.ic_sns_swap.pb.v1.Init} returns this
 */
proto.ic_sns_swap.pb.v1.Init.prototype.setMinParticipantIcpE8s = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional uint64 max_participant_icp_e8s = 9;
 * @return {number}
 */
proto.ic_sns_swap.pb.v1.Init.prototype.getMaxParticipantIcpE8s = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.ic_sns_swap.pb.v1.Init} returns this
 */
proto.ic_sns_swap.pb.v1.Init.prototype.setMaxParticipantIcpE8s = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint64 min_icp_e8s = 10;
 * @return {number}
 */
proto.ic_sns_swap.pb.v1.Init.prototype.getMinIcpE8s = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.ic_sns_swap.pb.v1.Init} returns this
 */
proto.ic_sns_swap.pb.v1.Init.prototype.setMinIcpE8s = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * repeated string fallback_controller_principal_ids = 11;
 * @return {!Array<string>}
 */
proto.ic_sns_swap.pb.v1.Init.prototype.getFallbackControllerPrincipalIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ic_sns_swap.pb.v1.Init} returns this
 */
proto.ic_sns_swap.pb.v1.Init.prototype.setFallbackControllerPrincipalIdsList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ic_sns_swap.pb.v1.Init} returns this
 */
proto.ic_sns_swap.pb.v1.Init.prototype.addFallbackControllerPrincipalIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ic_sns_swap.pb.v1.Init} returns this
 */
proto.ic_sns_swap.pb.v1.Init.prototype.clearFallbackControllerPrincipalIdsList = function() {
  return this.setFallbackControllerPrincipalIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ic_sns_swap.pb.v1.BuyerState.prototype.toObject = function(opt_includeInstance) {
  return proto.ic_sns_swap.pb.v1.BuyerState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ic_sns_swap.pb.v1.BuyerState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.BuyerState.toObject = function(includeInstance, msg) {
  var f, obj = {
    amountIcpE8s: jspb.Message.getFieldWithDefault(msg, 1, 0),
    amountSnsE8s: jspb.Message.getFieldWithDefault(msg, 2, 0),
    icpDisbursing: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    snsDisbursing: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ic_sns_swap.pb.v1.BuyerState}
 */
proto.ic_sns_swap.pb.v1.BuyerState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ic_sns_swap.pb.v1.BuyerState;
  return proto.ic_sns_swap.pb.v1.BuyerState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ic_sns_swap.pb.v1.BuyerState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ic_sns_swap.pb.v1.BuyerState}
 */
proto.ic_sns_swap.pb.v1.BuyerState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAmountIcpE8s(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAmountSnsE8s(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIcpDisbursing(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSnsDisbursing(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ic_sns_swap.pb.v1.BuyerState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ic_sns_swap.pb.v1.BuyerState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ic_sns_swap.pb.v1.BuyerState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.BuyerState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmountIcpE8s();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getAmountSnsE8s();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getIcpDisbursing();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getSnsDisbursing();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional uint64 amount_icp_e8s = 1;
 * @return {number}
 */
proto.ic_sns_swap.pb.v1.BuyerState.prototype.getAmountIcpE8s = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ic_sns_swap.pb.v1.BuyerState} returns this
 */
proto.ic_sns_swap.pb.v1.BuyerState.prototype.setAmountIcpE8s = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 amount_sns_e8s = 2;
 * @return {number}
 */
proto.ic_sns_swap.pb.v1.BuyerState.prototype.getAmountSnsE8s = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ic_sns_swap.pb.v1.BuyerState} returns this
 */
proto.ic_sns_swap.pb.v1.BuyerState.prototype.setAmountSnsE8s = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool icp_disbursing = 3;
 * @return {boolean}
 */
proto.ic_sns_swap.pb.v1.BuyerState.prototype.getIcpDisbursing = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ic_sns_swap.pb.v1.BuyerState} returns this
 */
proto.ic_sns_swap.pb.v1.BuyerState.prototype.setIcpDisbursing = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool sns_disbursing = 4;
 * @return {boolean}
 */
proto.ic_sns_swap.pb.v1.BuyerState.prototype.getSnsDisbursing = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ic_sns_swap.pb.v1.BuyerState} returns this
 */
proto.ic_sns_swap.pb.v1.BuyerState.prototype.setSnsDisbursing = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ic_sns_swap.pb.v1.State.prototype.toObject = function(opt_includeInstance) {
  return proto.ic_sns_swap.pb.v1.State.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ic_sns_swap.pb.v1.State} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.State.toObject = function(includeInstance, msg) {
  var f, obj = {
    snsTokenE8s: jspb.Message.getFieldWithDefault(msg, 1, 0),
    buyersMap: (f = msg.getBuyersMap()) ? f.toObject(includeInstance, proto.ic_sns_swap.pb.v1.BuyerState.toObject) : [],
    lifecycle: jspb.Message.getFieldWithDefault(msg, 3, 0),
    openTimeWindow: (f = msg.getOpenTimeWindow()) && proto.ic_sns_swap.pb.v1.TimeWindow.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ic_sns_swap.pb.v1.State}
 */
proto.ic_sns_swap.pb.v1.State.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ic_sns_swap.pb.v1.State;
  return proto.ic_sns_swap.pb.v1.State.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ic_sns_swap.pb.v1.State} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ic_sns_swap.pb.v1.State}
 */
proto.ic_sns_swap.pb.v1.State.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSnsTokenE8s(value);
      break;
    case 2:
      var value = msg.getBuyersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.ic_sns_swap.pb.v1.BuyerState.deserializeBinaryFromReader, "", new proto.ic_sns_swap.pb.v1.BuyerState());
         });
      break;
    case 3:
      var value = /** @type {!proto.ic_sns_swap.pb.v1.Lifecycle} */ (reader.readEnum());
      msg.setLifecycle(value);
      break;
    case 4:
      var value = new proto.ic_sns_swap.pb.v1.TimeWindow;
      reader.readMessage(value,proto.ic_sns_swap.pb.v1.TimeWindow.deserializeBinaryFromReader);
      msg.setOpenTimeWindow(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ic_sns_swap.pb.v1.State.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ic_sns_swap.pb.v1.State.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ic_sns_swap.pb.v1.State} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.State.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSnsTokenE8s();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getBuyersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.ic_sns_swap.pb.v1.BuyerState.serializeBinaryToWriter);
  }
  f = message.getLifecycle();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getOpenTimeWindow();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ic_sns_swap.pb.v1.TimeWindow.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 sns_token_e8s = 1;
 * @return {number}
 */
proto.ic_sns_swap.pb.v1.State.prototype.getSnsTokenE8s = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ic_sns_swap.pb.v1.State} returns this
 */
proto.ic_sns_swap.pb.v1.State.prototype.setSnsTokenE8s = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * map<string, BuyerState> buyers = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.ic_sns_swap.pb.v1.BuyerState>}
 */
proto.ic_sns_swap.pb.v1.State.prototype.getBuyersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.ic_sns_swap.pb.v1.BuyerState>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.ic_sns_swap.pb.v1.BuyerState));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.ic_sns_swap.pb.v1.State} returns this
 */
proto.ic_sns_swap.pb.v1.State.prototype.clearBuyersMap = function() {
  this.getBuyersMap().clear();
  return this;};


/**
 * optional Lifecycle lifecycle = 3;
 * @return {!proto.ic_sns_swap.pb.v1.Lifecycle}
 */
proto.ic_sns_swap.pb.v1.State.prototype.getLifecycle = function() {
  return /** @type {!proto.ic_sns_swap.pb.v1.Lifecycle} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.ic_sns_swap.pb.v1.Lifecycle} value
 * @return {!proto.ic_sns_swap.pb.v1.State} returns this
 */
proto.ic_sns_swap.pb.v1.State.prototype.setLifecycle = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional TimeWindow open_time_window = 4;
 * @return {?proto.ic_sns_swap.pb.v1.TimeWindow}
 */
proto.ic_sns_swap.pb.v1.State.prototype.getOpenTimeWindow = function() {
  return /** @type{?proto.ic_sns_swap.pb.v1.TimeWindow} */ (
    jspb.Message.getWrapperField(this, proto.ic_sns_swap.pb.v1.TimeWindow, 4));
};


/**
 * @param {?proto.ic_sns_swap.pb.v1.TimeWindow|undefined} value
 * @return {!proto.ic_sns_swap.pb.v1.State} returns this
*/
proto.ic_sns_swap.pb.v1.State.prototype.setOpenTimeWindow = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ic_sns_swap.pb.v1.State} returns this
 */
proto.ic_sns_swap.pb.v1.State.prototype.clearOpenTimeWindow = function() {
  return this.setOpenTimeWindow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ic_sns_swap.pb.v1.State.prototype.hasOpenTimeWindow = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ic_sns_swap.pb.v1.TimeWindow.prototype.toObject = function(opt_includeInstance) {
  return proto.ic_sns_swap.pb.v1.TimeWindow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ic_sns_swap.pb.v1.TimeWindow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.TimeWindow.toObject = function(includeInstance, msg) {
  var f, obj = {
    startTimestampSeconds: jspb.Message.getFieldWithDefault(msg, 1, 0),
    endTimestampSeconds: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ic_sns_swap.pb.v1.TimeWindow}
 */
proto.ic_sns_swap.pb.v1.TimeWindow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ic_sns_swap.pb.v1.TimeWindow;
  return proto.ic_sns_swap.pb.v1.TimeWindow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ic_sns_swap.pb.v1.TimeWindow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ic_sns_swap.pb.v1.TimeWindow}
 */
proto.ic_sns_swap.pb.v1.TimeWindow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStartTimestampSeconds(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEndTimestampSeconds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ic_sns_swap.pb.v1.TimeWindow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ic_sns_swap.pb.v1.TimeWindow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ic_sns_swap.pb.v1.TimeWindow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.TimeWindow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartTimestampSeconds();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getEndTimestampSeconds();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 start_timestamp_seconds = 1;
 * @return {number}
 */
proto.ic_sns_swap.pb.v1.TimeWindow.prototype.getStartTimestampSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ic_sns_swap.pb.v1.TimeWindow} returns this
 */
proto.ic_sns_swap.pb.v1.TimeWindow.prototype.setStartTimestampSeconds = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 end_timestamp_seconds = 2;
 * @return {number}
 */
proto.ic_sns_swap.pb.v1.TimeWindow.prototype.getEndTimestampSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ic_sns_swap.pb.v1.TimeWindow} returns this
 */
proto.ic_sns_swap.pb.v1.TimeWindow.prototype.setEndTimestampSeconds = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ic_sns_swap.pb.v1.Swap.prototype.toObject = function(opt_includeInstance) {
  return proto.ic_sns_swap.pb.v1.Swap.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ic_sns_swap.pb.v1.Swap} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.Swap.toObject = function(includeInstance, msg) {
  var f, obj = {
    init: (f = msg.getInit()) && proto.ic_sns_swap.pb.v1.Init.toObject(includeInstance, f),
    state: (f = msg.getState()) && proto.ic_sns_swap.pb.v1.State.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ic_sns_swap.pb.v1.Swap}
 */
proto.ic_sns_swap.pb.v1.Swap.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ic_sns_swap.pb.v1.Swap;
  return proto.ic_sns_swap.pb.v1.Swap.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ic_sns_swap.pb.v1.Swap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ic_sns_swap.pb.v1.Swap}
 */
proto.ic_sns_swap.pb.v1.Swap.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ic_sns_swap.pb.v1.Init;
      reader.readMessage(value,proto.ic_sns_swap.pb.v1.Init.deserializeBinaryFromReader);
      msg.setInit(value);
      break;
    case 2:
      var value = new proto.ic_sns_swap.pb.v1.State;
      reader.readMessage(value,proto.ic_sns_swap.pb.v1.State.deserializeBinaryFromReader);
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ic_sns_swap.pb.v1.Swap.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ic_sns_swap.pb.v1.Swap.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ic_sns_swap.pb.v1.Swap} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.Swap.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInit();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ic_sns_swap.pb.v1.Init.serializeBinaryToWriter
    );
  }
  f = message.getState();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ic_sns_swap.pb.v1.State.serializeBinaryToWriter
    );
  }
};


/**
 * optional Init init = 1;
 * @return {?proto.ic_sns_swap.pb.v1.Init}
 */
proto.ic_sns_swap.pb.v1.Swap.prototype.getInit = function() {
  return /** @type{?proto.ic_sns_swap.pb.v1.Init} */ (
    jspb.Message.getWrapperField(this, proto.ic_sns_swap.pb.v1.Init, 1));
};


/**
 * @param {?proto.ic_sns_swap.pb.v1.Init|undefined} value
 * @return {!proto.ic_sns_swap.pb.v1.Swap} returns this
*/
proto.ic_sns_swap.pb.v1.Swap.prototype.setInit = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ic_sns_swap.pb.v1.Swap} returns this
 */
proto.ic_sns_swap.pb.v1.Swap.prototype.clearInit = function() {
  return this.setInit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ic_sns_swap.pb.v1.Swap.prototype.hasInit = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional State state = 2;
 * @return {?proto.ic_sns_swap.pb.v1.State}
 */
proto.ic_sns_swap.pb.v1.Swap.prototype.getState = function() {
  return /** @type{?proto.ic_sns_swap.pb.v1.State} */ (
    jspb.Message.getWrapperField(this, proto.ic_sns_swap.pb.v1.State, 2));
};


/**
 * @param {?proto.ic_sns_swap.pb.v1.State|undefined} value
 * @return {!proto.ic_sns_swap.pb.v1.Swap} returns this
*/
proto.ic_sns_swap.pb.v1.Swap.prototype.setState = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ic_sns_swap.pb.v1.Swap} returns this
 */
proto.ic_sns_swap.pb.v1.Swap.prototype.clearState = function() {
  return this.setState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ic_sns_swap.pb.v1.Swap.prototype.hasState = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ic_sns_swap.pb.v1.GetCanisterStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ic_sns_swap.pb.v1.GetCanisterStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ic_sns_swap.pb.v1.GetCanisterStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.GetCanisterStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ic_sns_swap.pb.v1.GetCanisterStatusRequest}
 */
proto.ic_sns_swap.pb.v1.GetCanisterStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ic_sns_swap.pb.v1.GetCanisterStatusRequest;
  return proto.ic_sns_swap.pb.v1.GetCanisterStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ic_sns_swap.pb.v1.GetCanisterStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ic_sns_swap.pb.v1.GetCanisterStatusRequest}
 */
proto.ic_sns_swap.pb.v1.GetCanisterStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ic_sns_swap.pb.v1.GetCanisterStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ic_sns_swap.pb.v1.GetCanisterStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ic_sns_swap.pb.v1.GetCanisterStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.GetCanisterStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ic_sns_swap.pb.v1.GetStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ic_sns_swap.pb.v1.GetStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ic_sns_swap.pb.v1.GetStateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.GetStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ic_sns_swap.pb.v1.GetStateRequest}
 */
proto.ic_sns_swap.pb.v1.GetStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ic_sns_swap.pb.v1.GetStateRequest;
  return proto.ic_sns_swap.pb.v1.GetStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ic_sns_swap.pb.v1.GetStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ic_sns_swap.pb.v1.GetStateRequest}
 */
proto.ic_sns_swap.pb.v1.GetStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ic_sns_swap.pb.v1.GetStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ic_sns_swap.pb.v1.GetStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ic_sns_swap.pb.v1.GetStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.GetStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ic_sns_swap.pb.v1.GetStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ic_sns_swap.pb.v1.GetStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ic_sns_swap.pb.v1.GetStateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.GetStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    swap: (f = msg.getSwap()) && proto.ic_sns_swap.pb.v1.Swap.toObject(includeInstance, f),
    derived: (f = msg.getDerived()) && proto.ic_sns_swap.pb.v1.DerivedState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ic_sns_swap.pb.v1.GetStateResponse}
 */
proto.ic_sns_swap.pb.v1.GetStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ic_sns_swap.pb.v1.GetStateResponse;
  return proto.ic_sns_swap.pb.v1.GetStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ic_sns_swap.pb.v1.GetStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ic_sns_swap.pb.v1.GetStateResponse}
 */
proto.ic_sns_swap.pb.v1.GetStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ic_sns_swap.pb.v1.Swap;
      reader.readMessage(value,proto.ic_sns_swap.pb.v1.Swap.deserializeBinaryFromReader);
      msg.setSwap(value);
      break;
    case 2:
      var value = new proto.ic_sns_swap.pb.v1.DerivedState;
      reader.readMessage(value,proto.ic_sns_swap.pb.v1.DerivedState.deserializeBinaryFromReader);
      msg.setDerived(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ic_sns_swap.pb.v1.GetStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ic_sns_swap.pb.v1.GetStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ic_sns_swap.pb.v1.GetStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.GetStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSwap();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ic_sns_swap.pb.v1.Swap.serializeBinaryToWriter
    );
  }
  f = message.getDerived();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ic_sns_swap.pb.v1.DerivedState.serializeBinaryToWriter
    );
  }
};


/**
 * optional Swap swap = 1;
 * @return {?proto.ic_sns_swap.pb.v1.Swap}
 */
proto.ic_sns_swap.pb.v1.GetStateResponse.prototype.getSwap = function() {
  return /** @type{?proto.ic_sns_swap.pb.v1.Swap} */ (
    jspb.Message.getWrapperField(this, proto.ic_sns_swap.pb.v1.Swap, 1));
};


/**
 * @param {?proto.ic_sns_swap.pb.v1.Swap|undefined} value
 * @return {!proto.ic_sns_swap.pb.v1.GetStateResponse} returns this
*/
proto.ic_sns_swap.pb.v1.GetStateResponse.prototype.setSwap = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ic_sns_swap.pb.v1.GetStateResponse} returns this
 */
proto.ic_sns_swap.pb.v1.GetStateResponse.prototype.clearSwap = function() {
  return this.setSwap(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ic_sns_swap.pb.v1.GetStateResponse.prototype.hasSwap = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DerivedState derived = 2;
 * @return {?proto.ic_sns_swap.pb.v1.DerivedState}
 */
proto.ic_sns_swap.pb.v1.GetStateResponse.prototype.getDerived = function() {
  return /** @type{?proto.ic_sns_swap.pb.v1.DerivedState} */ (
    jspb.Message.getWrapperField(this, proto.ic_sns_swap.pb.v1.DerivedState, 2));
};


/**
 * @param {?proto.ic_sns_swap.pb.v1.DerivedState|undefined} value
 * @return {!proto.ic_sns_swap.pb.v1.GetStateResponse} returns this
*/
proto.ic_sns_swap.pb.v1.GetStateResponse.prototype.setDerived = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ic_sns_swap.pb.v1.GetStateResponse} returns this
 */
proto.ic_sns_swap.pb.v1.GetStateResponse.prototype.clearDerived = function() {
  return this.setDerived(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ic_sns_swap.pb.v1.GetStateResponse.prototype.hasDerived = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ic_sns_swap.pb.v1.DerivedState.prototype.toObject = function(opt_includeInstance) {
  return proto.ic_sns_swap.pb.v1.DerivedState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ic_sns_swap.pb.v1.DerivedState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.DerivedState.toObject = function(includeInstance, msg) {
  var f, obj = {
    buyerTotalIcpE8s: jspb.Message.getFieldWithDefault(msg, 1, 0),
    snsTokensPerIcp: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ic_sns_swap.pb.v1.DerivedState}
 */
proto.ic_sns_swap.pb.v1.DerivedState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ic_sns_swap.pb.v1.DerivedState;
  return proto.ic_sns_swap.pb.v1.DerivedState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ic_sns_swap.pb.v1.DerivedState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ic_sns_swap.pb.v1.DerivedState}
 */
proto.ic_sns_swap.pb.v1.DerivedState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBuyerTotalIcpE8s(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSnsTokensPerIcp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ic_sns_swap.pb.v1.DerivedState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ic_sns_swap.pb.v1.DerivedState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ic_sns_swap.pb.v1.DerivedState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.DerivedState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBuyerTotalIcpE8s();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getSnsTokensPerIcp();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional uint64 buyer_total_icp_e8s = 1;
 * @return {number}
 */
proto.ic_sns_swap.pb.v1.DerivedState.prototype.getBuyerTotalIcpE8s = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ic_sns_swap.pb.v1.DerivedState} returns this
 */
proto.ic_sns_swap.pb.v1.DerivedState.prototype.setBuyerTotalIcpE8s = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional float sns_tokens_per_icp = 2;
 * @return {number}
 */
proto.ic_sns_swap.pb.v1.DerivedState.prototype.getSnsTokensPerIcp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ic_sns_swap.pb.v1.DerivedState} returns this
 */
proto.ic_sns_swap.pb.v1.DerivedState.prototype.setSnsTokensPerIcp = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ic_sns_swap.pb.v1.SetOpenTimeWindowRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ic_sns_swap.pb.v1.SetOpenTimeWindowRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ic_sns_swap.pb.v1.SetOpenTimeWindowRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.SetOpenTimeWindowRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    openTimeWindow: (f = msg.getOpenTimeWindow()) && proto.ic_sns_swap.pb.v1.TimeWindow.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ic_sns_swap.pb.v1.SetOpenTimeWindowRequest}
 */
proto.ic_sns_swap.pb.v1.SetOpenTimeWindowRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ic_sns_swap.pb.v1.SetOpenTimeWindowRequest;
  return proto.ic_sns_swap.pb.v1.SetOpenTimeWindowRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ic_sns_swap.pb.v1.SetOpenTimeWindowRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ic_sns_swap.pb.v1.SetOpenTimeWindowRequest}
 */
proto.ic_sns_swap.pb.v1.SetOpenTimeWindowRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ic_sns_swap.pb.v1.TimeWindow;
      reader.readMessage(value,proto.ic_sns_swap.pb.v1.TimeWindow.deserializeBinaryFromReader);
      msg.setOpenTimeWindow(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ic_sns_swap.pb.v1.SetOpenTimeWindowRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ic_sns_swap.pb.v1.SetOpenTimeWindowRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ic_sns_swap.pb.v1.SetOpenTimeWindowRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.SetOpenTimeWindowRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpenTimeWindow();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ic_sns_swap.pb.v1.TimeWindow.serializeBinaryToWriter
    );
  }
};


/**
 * optional TimeWindow open_time_window = 1;
 * @return {?proto.ic_sns_swap.pb.v1.TimeWindow}
 */
proto.ic_sns_swap.pb.v1.SetOpenTimeWindowRequest.prototype.getOpenTimeWindow = function() {
  return /** @type{?proto.ic_sns_swap.pb.v1.TimeWindow} */ (
    jspb.Message.getWrapperField(this, proto.ic_sns_swap.pb.v1.TimeWindow, 1));
};


/**
 * @param {?proto.ic_sns_swap.pb.v1.TimeWindow|undefined} value
 * @return {!proto.ic_sns_swap.pb.v1.SetOpenTimeWindowRequest} returns this
*/
proto.ic_sns_swap.pb.v1.SetOpenTimeWindowRequest.prototype.setOpenTimeWindow = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ic_sns_swap.pb.v1.SetOpenTimeWindowRequest} returns this
 */
proto.ic_sns_swap.pb.v1.SetOpenTimeWindowRequest.prototype.clearOpenTimeWindow = function() {
  return this.setOpenTimeWindow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ic_sns_swap.pb.v1.SetOpenTimeWindowRequest.prototype.hasOpenTimeWindow = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ic_sns_swap.pb.v1.SetOpenTimeWindowResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ic_sns_swap.pb.v1.SetOpenTimeWindowResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ic_sns_swap.pb.v1.SetOpenTimeWindowResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.SetOpenTimeWindowResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ic_sns_swap.pb.v1.SetOpenTimeWindowResponse}
 */
proto.ic_sns_swap.pb.v1.SetOpenTimeWindowResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ic_sns_swap.pb.v1.SetOpenTimeWindowResponse;
  return proto.ic_sns_swap.pb.v1.SetOpenTimeWindowResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ic_sns_swap.pb.v1.SetOpenTimeWindowResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ic_sns_swap.pb.v1.SetOpenTimeWindowResponse}
 */
proto.ic_sns_swap.pb.v1.SetOpenTimeWindowResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ic_sns_swap.pb.v1.SetOpenTimeWindowResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ic_sns_swap.pb.v1.SetOpenTimeWindowResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ic_sns_swap.pb.v1.SetOpenTimeWindowResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.SetOpenTimeWindowResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ic_sns_swap.pb.v1.RefreshSnsTokensRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ic_sns_swap.pb.v1.RefreshSnsTokensRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ic_sns_swap.pb.v1.RefreshSnsTokensRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.RefreshSnsTokensRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ic_sns_swap.pb.v1.RefreshSnsTokensRequest}
 */
proto.ic_sns_swap.pb.v1.RefreshSnsTokensRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ic_sns_swap.pb.v1.RefreshSnsTokensRequest;
  return proto.ic_sns_swap.pb.v1.RefreshSnsTokensRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ic_sns_swap.pb.v1.RefreshSnsTokensRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ic_sns_swap.pb.v1.RefreshSnsTokensRequest}
 */
proto.ic_sns_swap.pb.v1.RefreshSnsTokensRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ic_sns_swap.pb.v1.RefreshSnsTokensRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ic_sns_swap.pb.v1.RefreshSnsTokensRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ic_sns_swap.pb.v1.RefreshSnsTokensRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.RefreshSnsTokensRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ic_sns_swap.pb.v1.RefreshSnsTokensResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ic_sns_swap.pb.v1.RefreshSnsTokensResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ic_sns_swap.pb.v1.RefreshSnsTokensResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.RefreshSnsTokensResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ic_sns_swap.pb.v1.RefreshSnsTokensResponse}
 */
proto.ic_sns_swap.pb.v1.RefreshSnsTokensResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ic_sns_swap.pb.v1.RefreshSnsTokensResponse;
  return proto.ic_sns_swap.pb.v1.RefreshSnsTokensResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ic_sns_swap.pb.v1.RefreshSnsTokensResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ic_sns_swap.pb.v1.RefreshSnsTokensResponse}
 */
proto.ic_sns_swap.pb.v1.RefreshSnsTokensResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ic_sns_swap.pb.v1.RefreshSnsTokensResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ic_sns_swap.pb.v1.RefreshSnsTokensResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ic_sns_swap.pb.v1.RefreshSnsTokensResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.RefreshSnsTokensResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ic_sns_swap.pb.v1.RefreshBuyerTokensRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ic_sns_swap.pb.v1.RefreshBuyerTokensRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ic_sns_swap.pb.v1.RefreshBuyerTokensRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.RefreshBuyerTokensRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    buyer: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ic_sns_swap.pb.v1.RefreshBuyerTokensRequest}
 */
proto.ic_sns_swap.pb.v1.RefreshBuyerTokensRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ic_sns_swap.pb.v1.RefreshBuyerTokensRequest;
  return proto.ic_sns_swap.pb.v1.RefreshBuyerTokensRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ic_sns_swap.pb.v1.RefreshBuyerTokensRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ic_sns_swap.pb.v1.RefreshBuyerTokensRequest}
 */
proto.ic_sns_swap.pb.v1.RefreshBuyerTokensRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ic_sns_swap.pb.v1.RefreshBuyerTokensRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ic_sns_swap.pb.v1.RefreshBuyerTokensRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ic_sns_swap.pb.v1.RefreshBuyerTokensRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.RefreshBuyerTokensRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBuyer();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string buyer = 1;
 * @return {string}
 */
proto.ic_sns_swap.pb.v1.RefreshBuyerTokensRequest.prototype.getBuyer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ic_sns_swap.pb.v1.RefreshBuyerTokensRequest} returns this
 */
proto.ic_sns_swap.pb.v1.RefreshBuyerTokensRequest.prototype.setBuyer = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ic_sns_swap.pb.v1.RefreshBuyerTokensResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ic_sns_swap.pb.v1.RefreshBuyerTokensResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ic_sns_swap.pb.v1.RefreshBuyerTokensResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.RefreshBuyerTokensResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ic_sns_swap.pb.v1.RefreshBuyerTokensResponse}
 */
proto.ic_sns_swap.pb.v1.RefreshBuyerTokensResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ic_sns_swap.pb.v1.RefreshBuyerTokensResponse;
  return proto.ic_sns_swap.pb.v1.RefreshBuyerTokensResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ic_sns_swap.pb.v1.RefreshBuyerTokensResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ic_sns_swap.pb.v1.RefreshBuyerTokensResponse}
 */
proto.ic_sns_swap.pb.v1.RefreshBuyerTokensResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ic_sns_swap.pb.v1.RefreshBuyerTokensResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ic_sns_swap.pb.v1.RefreshBuyerTokensResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ic_sns_swap.pb.v1.RefreshBuyerTokensResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.RefreshBuyerTokensResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ic_sns_swap.pb.v1.FinalizeSwapRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ic_sns_swap.pb.v1.FinalizeSwapRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ic_sns_swap.pb.v1.FinalizeSwapRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.FinalizeSwapRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ic_sns_swap.pb.v1.FinalizeSwapRequest}
 */
proto.ic_sns_swap.pb.v1.FinalizeSwapRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ic_sns_swap.pb.v1.FinalizeSwapRequest;
  return proto.ic_sns_swap.pb.v1.FinalizeSwapRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ic_sns_swap.pb.v1.FinalizeSwapRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ic_sns_swap.pb.v1.FinalizeSwapRequest}
 */
proto.ic_sns_swap.pb.v1.FinalizeSwapRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ic_sns_swap.pb.v1.FinalizeSwapRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ic_sns_swap.pb.v1.FinalizeSwapRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ic_sns_swap.pb.v1.FinalizeSwapRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.FinalizeSwapRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ic_sns_swap.pb.v1.FinalizeSwapResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ic_sns_swap.pb.v1.FinalizeSwapResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ic_sns_swap.pb.v1.FinalizeSwapResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.FinalizeSwapResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    sweepIcp: (f = msg.getSweepIcp()) && proto.ic_sns_swap.pb.v1.SweepResult.toObject(includeInstance, f),
    sweepSns: (f = msg.getSweepSns()) && proto.ic_sns_swap.pb.v1.SweepResult.toObject(includeInstance, f),
    createNeuron: (f = msg.getCreateNeuron()) && proto.ic_sns_swap.pb.v1.SweepResult.toObject(includeInstance, f),
    snsGovernanceNormalModeEnabled: (f = msg.getSnsGovernanceNormalModeEnabled()) && proto.ic_sns_swap.pb.v1.SetModeCallResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ic_sns_swap.pb.v1.FinalizeSwapResponse}
 */
proto.ic_sns_swap.pb.v1.FinalizeSwapResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ic_sns_swap.pb.v1.FinalizeSwapResponse;
  return proto.ic_sns_swap.pb.v1.FinalizeSwapResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ic_sns_swap.pb.v1.FinalizeSwapResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ic_sns_swap.pb.v1.FinalizeSwapResponse}
 */
proto.ic_sns_swap.pb.v1.FinalizeSwapResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ic_sns_swap.pb.v1.SweepResult;
      reader.readMessage(value,proto.ic_sns_swap.pb.v1.SweepResult.deserializeBinaryFromReader);
      msg.setSweepIcp(value);
      break;
    case 2:
      var value = new proto.ic_sns_swap.pb.v1.SweepResult;
      reader.readMessage(value,proto.ic_sns_swap.pb.v1.SweepResult.deserializeBinaryFromReader);
      msg.setSweepSns(value);
      break;
    case 3:
      var value = new proto.ic_sns_swap.pb.v1.SweepResult;
      reader.readMessage(value,proto.ic_sns_swap.pb.v1.SweepResult.deserializeBinaryFromReader);
      msg.setCreateNeuron(value);
      break;
    case 4:
      var value = new proto.ic_sns_swap.pb.v1.SetModeCallResult;
      reader.readMessage(value,proto.ic_sns_swap.pb.v1.SetModeCallResult.deserializeBinaryFromReader);
      msg.setSnsGovernanceNormalModeEnabled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ic_sns_swap.pb.v1.FinalizeSwapResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ic_sns_swap.pb.v1.FinalizeSwapResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ic_sns_swap.pb.v1.FinalizeSwapResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.FinalizeSwapResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSweepIcp();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ic_sns_swap.pb.v1.SweepResult.serializeBinaryToWriter
    );
  }
  f = message.getSweepSns();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ic_sns_swap.pb.v1.SweepResult.serializeBinaryToWriter
    );
  }
  f = message.getCreateNeuron();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ic_sns_swap.pb.v1.SweepResult.serializeBinaryToWriter
    );
  }
  f = message.getSnsGovernanceNormalModeEnabled();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ic_sns_swap.pb.v1.SetModeCallResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional SweepResult sweep_icp = 1;
 * @return {?proto.ic_sns_swap.pb.v1.SweepResult}
 */
proto.ic_sns_swap.pb.v1.FinalizeSwapResponse.prototype.getSweepIcp = function() {
  return /** @type{?proto.ic_sns_swap.pb.v1.SweepResult} */ (
    jspb.Message.getWrapperField(this, proto.ic_sns_swap.pb.v1.SweepResult, 1));
};


/**
 * @param {?proto.ic_sns_swap.pb.v1.SweepResult|undefined} value
 * @return {!proto.ic_sns_swap.pb.v1.FinalizeSwapResponse} returns this
*/
proto.ic_sns_swap.pb.v1.FinalizeSwapResponse.prototype.setSweepIcp = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ic_sns_swap.pb.v1.FinalizeSwapResponse} returns this
 */
proto.ic_sns_swap.pb.v1.FinalizeSwapResponse.prototype.clearSweepIcp = function() {
  return this.setSweepIcp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ic_sns_swap.pb.v1.FinalizeSwapResponse.prototype.hasSweepIcp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SweepResult sweep_sns = 2;
 * @return {?proto.ic_sns_swap.pb.v1.SweepResult}
 */
proto.ic_sns_swap.pb.v1.FinalizeSwapResponse.prototype.getSweepSns = function() {
  return /** @type{?proto.ic_sns_swap.pb.v1.SweepResult} */ (
    jspb.Message.getWrapperField(this, proto.ic_sns_swap.pb.v1.SweepResult, 2));
};


/**
 * @param {?proto.ic_sns_swap.pb.v1.SweepResult|undefined} value
 * @return {!proto.ic_sns_swap.pb.v1.FinalizeSwapResponse} returns this
*/
proto.ic_sns_swap.pb.v1.FinalizeSwapResponse.prototype.setSweepSns = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ic_sns_swap.pb.v1.FinalizeSwapResponse} returns this
 */
proto.ic_sns_swap.pb.v1.FinalizeSwapResponse.prototype.clearSweepSns = function() {
  return this.setSweepSns(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ic_sns_swap.pb.v1.FinalizeSwapResponse.prototype.hasSweepSns = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SweepResult create_neuron = 3;
 * @return {?proto.ic_sns_swap.pb.v1.SweepResult}
 */
proto.ic_sns_swap.pb.v1.FinalizeSwapResponse.prototype.getCreateNeuron = function() {
  return /** @type{?proto.ic_sns_swap.pb.v1.SweepResult} */ (
    jspb.Message.getWrapperField(this, proto.ic_sns_swap.pb.v1.SweepResult, 3));
};


/**
 * @param {?proto.ic_sns_swap.pb.v1.SweepResult|undefined} value
 * @return {!proto.ic_sns_swap.pb.v1.FinalizeSwapResponse} returns this
*/
proto.ic_sns_swap.pb.v1.FinalizeSwapResponse.prototype.setCreateNeuron = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ic_sns_swap.pb.v1.FinalizeSwapResponse} returns this
 */
proto.ic_sns_swap.pb.v1.FinalizeSwapResponse.prototype.clearCreateNeuron = function() {
  return this.setCreateNeuron(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ic_sns_swap.pb.v1.FinalizeSwapResponse.prototype.hasCreateNeuron = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional SetModeCallResult sns_governance_normal_mode_enabled = 4;
 * @return {?proto.ic_sns_swap.pb.v1.SetModeCallResult}
 */
proto.ic_sns_swap.pb.v1.FinalizeSwapResponse.prototype.getSnsGovernanceNormalModeEnabled = function() {
  return /** @type{?proto.ic_sns_swap.pb.v1.SetModeCallResult} */ (
    jspb.Message.getWrapperField(this, proto.ic_sns_swap.pb.v1.SetModeCallResult, 4));
};


/**
 * @param {?proto.ic_sns_swap.pb.v1.SetModeCallResult|undefined} value
 * @return {!proto.ic_sns_swap.pb.v1.FinalizeSwapResponse} returns this
*/
proto.ic_sns_swap.pb.v1.FinalizeSwapResponse.prototype.setSnsGovernanceNormalModeEnabled = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ic_sns_swap.pb.v1.FinalizeSwapResponse} returns this
 */
proto.ic_sns_swap.pb.v1.FinalizeSwapResponse.prototype.clearSnsGovernanceNormalModeEnabled = function() {
  return this.setSnsGovernanceNormalModeEnabled(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ic_sns_swap.pb.v1.FinalizeSwapResponse.prototype.hasSnsGovernanceNormalModeEnabled = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ic_sns_swap.pb.v1.SweepResult.prototype.toObject = function(opt_includeInstance) {
  return proto.ic_sns_swap.pb.v1.SweepResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ic_sns_swap.pb.v1.SweepResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.SweepResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getFieldWithDefault(msg, 1, 0),
    failure: jspb.Message.getFieldWithDefault(msg, 2, 0),
    skipped: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ic_sns_swap.pb.v1.SweepResult}
 */
proto.ic_sns_swap.pb.v1.SweepResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ic_sns_swap.pb.v1.SweepResult;
  return proto.ic_sns_swap.pb.v1.SweepResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ic_sns_swap.pb.v1.SweepResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ic_sns_swap.pb.v1.SweepResult}
 */
proto.ic_sns_swap.pb.v1.SweepResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFailure(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSkipped(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ic_sns_swap.pb.v1.SweepResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ic_sns_swap.pb.v1.SweepResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ic_sns_swap.pb.v1.SweepResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.SweepResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getFailure();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getSkipped();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional uint32 success = 1;
 * @return {number}
 */
proto.ic_sns_swap.pb.v1.SweepResult.prototype.getSuccess = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ic_sns_swap.pb.v1.SweepResult} returns this
 */
proto.ic_sns_swap.pb.v1.SweepResult.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 failure = 2;
 * @return {number}
 */
proto.ic_sns_swap.pb.v1.SweepResult.prototype.getFailure = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ic_sns_swap.pb.v1.SweepResult} returns this
 */
proto.ic_sns_swap.pb.v1.SweepResult.prototype.setFailure = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 skipped = 3;
 * @return {number}
 */
proto.ic_sns_swap.pb.v1.SweepResult.prototype.getSkipped = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ic_sns_swap.pb.v1.SweepResult} returns this
 */
proto.ic_sns_swap.pb.v1.SweepResult.prototype.setSkipped = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ic_sns_swap.pb.v1.SetModeCallResult.oneofGroups_ = [[2]];

/**
 * @enum {number}
 */
proto.ic_sns_swap.pb.v1.SetModeCallResult.PossibilityCase = {
  POSSIBILITY_NOT_SET: 0,
  ERR: 2
};

/**
 * @return {proto.ic_sns_swap.pb.v1.SetModeCallResult.PossibilityCase}
 */
proto.ic_sns_swap.pb.v1.SetModeCallResult.prototype.getPossibilityCase = function() {
  return /** @type {proto.ic_sns_swap.pb.v1.SetModeCallResult.PossibilityCase} */(jspb.Message.computeOneofCase(this, proto.ic_sns_swap.pb.v1.SetModeCallResult.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ic_sns_swap.pb.v1.SetModeCallResult.prototype.toObject = function(opt_includeInstance) {
  return proto.ic_sns_swap.pb.v1.SetModeCallResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ic_sns_swap.pb.v1.SetModeCallResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.SetModeCallResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.ic_sns_swap.pb.v1.CanisterCallError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ic_sns_swap.pb.v1.SetModeCallResult}
 */
proto.ic_sns_swap.pb.v1.SetModeCallResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ic_sns_swap.pb.v1.SetModeCallResult;
  return proto.ic_sns_swap.pb.v1.SetModeCallResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ic_sns_swap.pb.v1.SetModeCallResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ic_sns_swap.pb.v1.SetModeCallResult}
 */
proto.ic_sns_swap.pb.v1.SetModeCallResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.ic_sns_swap.pb.v1.CanisterCallError;
      reader.readMessage(value,proto.ic_sns_swap.pb.v1.CanisterCallError.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ic_sns_swap.pb.v1.SetModeCallResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ic_sns_swap.pb.v1.SetModeCallResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ic_sns_swap.pb.v1.SetModeCallResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.SetModeCallResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ic_sns_swap.pb.v1.CanisterCallError.serializeBinaryToWriter
    );
  }
};


/**
 * optional CanisterCallError err = 2;
 * @return {?proto.ic_sns_swap.pb.v1.CanisterCallError}
 */
proto.ic_sns_swap.pb.v1.SetModeCallResult.prototype.getErr = function() {
  return /** @type{?proto.ic_sns_swap.pb.v1.CanisterCallError} */ (
    jspb.Message.getWrapperField(this, proto.ic_sns_swap.pb.v1.CanisterCallError, 2));
};


/**
 * @param {?proto.ic_sns_swap.pb.v1.CanisterCallError|undefined} value
 * @return {!proto.ic_sns_swap.pb.v1.SetModeCallResult} returns this
*/
proto.ic_sns_swap.pb.v1.SetModeCallResult.prototype.setErr = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.ic_sns_swap.pb.v1.SetModeCallResult.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ic_sns_swap.pb.v1.SetModeCallResult} returns this
 */
proto.ic_sns_swap.pb.v1.SetModeCallResult.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ic_sns_swap.pb.v1.SetModeCallResult.prototype.hasErr = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ic_sns_swap.pb.v1.CanisterCallError.prototype.toObject = function(opt_includeInstance) {
  return proto.ic_sns_swap.pb.v1.CanisterCallError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ic_sns_swap.pb.v1.CanisterCallError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.CanisterCallError.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    description: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ic_sns_swap.pb.v1.CanisterCallError}
 */
proto.ic_sns_swap.pb.v1.CanisterCallError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ic_sns_swap.pb.v1.CanisterCallError;
  return proto.ic_sns_swap.pb.v1.CanisterCallError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ic_sns_swap.pb.v1.CanisterCallError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ic_sns_swap.pb.v1.CanisterCallError}
 */
proto.ic_sns_swap.pb.v1.CanisterCallError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ic_sns_swap.pb.v1.CanisterCallError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ic_sns_swap.pb.v1.CanisterCallError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ic_sns_swap.pb.v1.CanisterCallError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.CanisterCallError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.ic_sns_swap.pb.v1.CanisterCallError.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ic_sns_swap.pb.v1.CanisterCallError} returns this
 */
proto.ic_sns_swap.pb.v1.CanisterCallError.prototype.setCode = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ic_sns_swap.pb.v1.CanisterCallError} returns this
 */
proto.ic_sns_swap.pb.v1.CanisterCallError.prototype.clearCode = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ic_sns_swap.pb.v1.CanisterCallError.prototype.hasCode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.ic_sns_swap.pb.v1.CanisterCallError.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ic_sns_swap.pb.v1.CanisterCallError} returns this
 */
proto.ic_sns_swap.pb.v1.CanisterCallError.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ic_sns_swap.pb.v1.ErrorRefundIcpRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ic_sns_swap.pb.v1.ErrorRefundIcpRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ic_sns_swap.pb.v1.ErrorRefundIcpRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.ErrorRefundIcpRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    icpE8s: jspb.Message.getFieldWithDefault(msg, 1, 0),
    feeOverrideE8s: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ic_sns_swap.pb.v1.ErrorRefundIcpRequest}
 */
proto.ic_sns_swap.pb.v1.ErrorRefundIcpRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ic_sns_swap.pb.v1.ErrorRefundIcpRequest;
  return proto.ic_sns_swap.pb.v1.ErrorRefundIcpRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ic_sns_swap.pb.v1.ErrorRefundIcpRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ic_sns_swap.pb.v1.ErrorRefundIcpRequest}
 */
proto.ic_sns_swap.pb.v1.ErrorRefundIcpRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setIcpE8s(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFeeOverrideE8s(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ic_sns_swap.pb.v1.ErrorRefundIcpRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ic_sns_swap.pb.v1.ErrorRefundIcpRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ic_sns_swap.pb.v1.ErrorRefundIcpRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.ErrorRefundIcpRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIcpE8s();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getFeeOverrideE8s();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 icp_e8s = 1;
 * @return {number}
 */
proto.ic_sns_swap.pb.v1.ErrorRefundIcpRequest.prototype.getIcpE8s = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ic_sns_swap.pb.v1.ErrorRefundIcpRequest} returns this
 */
proto.ic_sns_swap.pb.v1.ErrorRefundIcpRequest.prototype.setIcpE8s = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 fee_override_e8s = 2;
 * @return {number}
 */
proto.ic_sns_swap.pb.v1.ErrorRefundIcpRequest.prototype.getFeeOverrideE8s = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ic_sns_swap.pb.v1.ErrorRefundIcpRequest} returns this
 */
proto.ic_sns_swap.pb.v1.ErrorRefundIcpRequest.prototype.setFeeOverrideE8s = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ic_sns_swap.pb.v1.ErrorRefundIcpResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ic_sns_swap.pb.v1.ErrorRefundIcpResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ic_sns_swap.pb.v1.ErrorRefundIcpResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.ErrorRefundIcpResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ic_sns_swap.pb.v1.ErrorRefundIcpResponse}
 */
proto.ic_sns_swap.pb.v1.ErrorRefundIcpResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ic_sns_swap.pb.v1.ErrorRefundIcpResponse;
  return proto.ic_sns_swap.pb.v1.ErrorRefundIcpResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ic_sns_swap.pb.v1.ErrorRefundIcpResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ic_sns_swap.pb.v1.ErrorRefundIcpResponse}
 */
proto.ic_sns_swap.pb.v1.ErrorRefundIcpResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ic_sns_swap.pb.v1.ErrorRefundIcpResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ic_sns_swap.pb.v1.ErrorRefundIcpResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ic_sns_swap.pb.v1.ErrorRefundIcpResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ic_sns_swap.pb.v1.ErrorRefundIcpResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.ic_sns_swap.pb.v1.Lifecycle = {
  LIFECYCLE_UNSPECIFIED: 0,
  LIFECYCLE_PENDING: 1,
  LIFECYCLE_OPEN: 2,
  LIFECYCLE_COMMITTED: 3,
  LIFECYCLE_ABORTED: 4
};

goog.object.extend(exports, proto.ic_sns_swap.pb.v1);
