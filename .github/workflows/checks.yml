name: CI Checks

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  formatting:
    runs-on: ubuntu-20.04

    # In order trigger the CLA after committing formatting changes, we need to
    # use the GIX_CREATE_PR_PAT token. This token is not available on PRs
    # created from a fork. So on PRs created from a fork, we don't commit
    # changes and instead just fail if the formatting is incorrect.
    steps:
      - name: Check if PR is from a fork
        id: check_fork
        run: echo "::set-output name=is_pr_from_fork::${{ github.event.pull_request.head.repo.full_name != github.repository }}"

      - name: Checkout
        if: steps.check_fork.outputs.is_pr_from_fork == 'false'
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GIX_CREATE_PR_PAT }}
      - name: Checkout Fork
        if: steps.check_fork.outputs.is_pr_from_fork == 'true'
        uses: actions/checkout@v2

      - name: Install shfmt
        run: sudo snap install --classic shfmt
      - name: Format shell scripts
        run: ./scripts/fmt-sh

      - name: Install ts dependencies
        run: npm ci
      - name: Format ts
        run: npm run format

      - name: Check formatting changes
        id: check_format
        run: |
          git diff --exit-code || echo "::set-output name=formatting_needed::true"

      - name: Commit Formatting changes
        if: steps.check_fork.outputs.is_fork == 'false' && steps.check_format.outputs.formatting_needed == 'true'
        uses: EndBug/add-and-commit@v7.2.0
        with:
          add: .
          default_author: github_actions
          message: "Updating formatting"
          # do not pull: if this branch is behind, then we might as well let
          # the pushing fail
          pull_strategy: "NO-PULL"

      - name: Fail for formatting issues in forks
        if: steps.check_fork.outputs.is_fork == 'true' && steps.check_format.outputs.formatting_needed == 'true'
        run: exit 1

  build-candid:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install didc
        run: |
          mkdir -p .bin
          curl -L https://github.com/dfinity/candid/releases/download/2024-02-27/didc-linux64 > .bin/didc
          chmod +x .bin/didc
      - name: Add didc to the PATH
        run: echo "${PWD}/.bin" >> $GITHUB_PATH
      - name: Install ts dependencies
        run: npm ci --include=dev
      - name: Compile candid
        run: ./scripts/compile-idl-js
      - name: Verify that there are no changes to the compiled did files
        run: git diff --exit-code -- candid/

  build-protobuf:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Check the protoc installer
        run: ./scripts/install-protoc --help
      - name: Install protoc
        run: sudo ./scripts/install-protoc
      - name: Install ts dependencies
        run: npm ci --include=dev
      - name: Compile protobuf
        run: npm run protoc
      - name: Verify that there are no changes to the compiled proto files
        run: git diff --exit-code -- packages/nns/proto/

  build:
    needs: [build-candid, build-protobuf]
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build --workspaces

  lint:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint

  test:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build --workspaces
      - name: Test
        run: npm run test --workspaces

  size:
    runs-on: ubuntu-20.04
    # The size checker should run and provide metrics only on PRs
    if: ${{ github.ref != 'refs/heads/main' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Size check
        uses: andresz1/size-limit-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  may-merge:
    needs: ["formatting", "build", "lint", "test", "size"]
    runs-on: ubuntu-20.04
    steps:
      - name: Cleared for merging
        run: echo OK
